{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\FullstackDevelopment2022\\\\Part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    header\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Button = _ref2 => {\n  let {\n    clickFunc,\n    description\n  } = _ref2;\n  return (\n    /*#__PURE__*/\n    //similar to as shown in the tutorial about rendering in part 1\n    _jsxDEV(\"button\", {\n      onClick: clickFunc,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c2 = Button;\n\nconst StatisticsLine = _ref3 => {\n  let {\n    type,\n    amount\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StatisticsLine;\n\nconst TotalFeedback = _ref4 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref4;\n  const type = 'All feedback';\n  return /*#__PURE__*/_jsxDEV(StatisticsLine, {\n    type: type,\n    amount: good + neutral + bad\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = TotalFeedback;\n\nconst AverageFeedback = _ref5 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref5;\n  //good counts for 1, neutral for 0, bad for -1\n  const total = good + neutral + bad;\n  const goodScore = good;\n  const neutralScore = neutral * 0;\n  const badScore = bad * -1;\n  const averageScore = (goodScore + neutralScore + badScore) / total;\n  const type = 'Average feedback';\n  return /*#__PURE__*/_jsxDEV(StatisticsLine, {\n    type: type,\n    amount: averageScore\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = AverageFeedback;\n\nconst PostiveFeedbackPercentage = _ref6 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref6;\n  const total = good + neutral + bad;\n  const positiveScore = good / total * 100;\n  const type = 'Positive percentage feedback';\n  const amount = positiveScore + ' %';\n  return /*#__PURE__*/_jsxDEV(StatisticsLine, {\n    type: type,\n    amount: amount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = PostiveFeedbackPercentage;\n\nconst Statistics = _ref7 => {\n  let {\n    feedbackTypes,\n    good,\n    neutral,\n    bad\n  } = _ref7;\n  const statTitle = 'statistics';\n  const total = good + neutral + bad;\n\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        header: statTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback has been given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: statTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      type: feedbackTypes[0],\n      amount: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      type: feedbackTypes[1],\n      amount: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n      type: feedbackTypes[2],\n      amount: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalFeedback, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AverageFeedback, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostiveFeedbackPercentage, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_c7 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const title = 'Please give unicafe feedback';\n  const feedbackTypes = ['Good', 'Neutral', 'Bad'];\n\n  const incGood = () => setGood(good + 1);\n\n  const incNeutral = () => setNeutral(neutral + 1);\n\n  const incBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incGood,\n      description: feedbackTypes[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incNeutral,\n      description: feedbackTypes[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incBad,\n      description: feedbackTypes[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedbackTypes: feedbackTypes,\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c8 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"StatisticsLine\");\n$RefreshReg$(_c4, \"TotalFeedback\");\n$RefreshReg$(_c5, \"AverageFeedback\");\n$RefreshReg$(_c6, \"PostiveFeedbackPercentage\");\n$RefreshReg$(_c7, \"Statistics\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["C:/Users/Richard/FullstackDevelopment2022/Part1/unicafe/src/App.js"],"names":["useState","Header","header","Button","clickFunc","description","StatisticsLine","type","amount","TotalFeedback","good","neutral","bad","AverageFeedback","total","goodScore","neutralScore","badScore","averageScore","PostiveFeedbackPercentage","positiveScore","Statistics","feedbackTypes","statTitle","App","setGood","setNeutral","setBad","title","incGood","incNeutral","incBad"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst Header = ({header}) => {\n  return (\n    <div>\n      <h1>{header}</h1>\n    </div>\n  )\n}\n\nconst Button = ({ clickFunc, description }) => (  //similar to as shown in the tutorial about rendering in part 1\n  <button onClick={clickFunc}>\n    {description}\n    </button>\n)\n\nconst StatisticsLine = ({type, amount}) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n    </tr>\n  )\n}\n\nconst TotalFeedback = ({good, neutral, bad}) => {\n  const type = 'All feedback'\n  return (\n    <StatisticsLine type={type} amount={good+neutral+bad}/>\n  )\n}\n\nconst AverageFeedback = ({good, neutral, bad}) => { //good counts for 1, neutral for 0, bad for -1\n  const total = good+neutral+bad\n  const goodScore = good\n  const neutralScore = neutral * 0\n  const badScore = bad * -1\n  const averageScore = (goodScore+neutralScore+badScore)/(total)\n  const type = 'Average feedback'\n\n  return (\n    <StatisticsLine type={type} amount={averageScore}/>\n  )\n}\n\nconst PostiveFeedbackPercentage = ({good, neutral, bad}) => {\n  const total = good+neutral+bad\n  const positiveScore = (good/(total))*100\n  const type = 'Positive percentage feedback'\n  const amount = positiveScore + ' %'\n\n  return (\n    <StatisticsLine type={type} amount={amount}/>\n  )\n}\n\nconst Statistics = ({feedbackTypes, good, neutral, bad}) => {\n  const statTitle = 'statistics'\n  const total = good+neutral+bad\n\n  if(total === 0) {\n    return (\n      <div>\n        <Header header={statTitle}/>\n        <p>No feedback has been given</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Header header={statTitle}/>\n      <StatisticsLine type={feedbackTypes[0]} amount={good}/>\n      <StatisticsLine type={feedbackTypes[1]} amount={neutral}/>\n      <StatisticsLine type={feedbackTypes[2]} amount={bad}/>\n      <TotalFeedback good={good} neutral={neutral} bad={bad}/>\n      <AverageFeedback good={good} neutral={neutral} bad={bad}/>\n      <PostiveFeedbackPercentage good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const title = 'Please give unicafe feedback'\n  const feedbackTypes = ['Good', 'Neutral', 'Bad']\n\n  const incGood = () => setGood(good+1)\n  const incNeutral = () => setNeutral(neutral+1)\n  const incBad = () => setBad(bad+1)\n\n  return (\n    <div>\n      <Header header={title}/>\n      <Button clickFunc={incGood} description={feedbackTypes[0]}/>\n      <Button clickFunc={incNeutral} description={feedbackTypes[1]}/>\n      <Button clickFunc={incBad} description={feedbackTypes[2]}/>\n      <Statistics feedbackTypes={feedbackTypes} good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}