{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\FullstackDevelopment2022\\\\Part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    header\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Button = _ref2 => {\n  let {\n    clickFunc,\n    description\n  } = _ref2;\n  return (\n    /*#__PURE__*/\n    //similar to as shown in the tutorial about rendering in part 1\n    _jsxDEV(\"button\", {\n      onClick: clickFunc,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c2 = Button;\n\nconst showFeedback = _ref3 => {\n  let {\n    type,\n    amount\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [type, \": \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst TotalFeedback = _ref4 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All feedback: \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = TotalFeedback;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const title = 'Please give unicafe feedback';\n  const statTitle = 'statistics';\n  const feedbackTypes = ['Good', 'Neutral', 'Bad'];\n\n  const incGood = () => setGood(good + 1);\n\n  const incNeutral = () => setNeutral(neutral + 1);\n\n  const incBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incGood,\n      description: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incNeutral,\n      description: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickFunc: incBad,\n      description: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      header: statTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"showFeedback\", {\n      type: feedbackTypes[0],\n      amount: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"showFeedback\", {\n      type: feedbackTypes[1],\n      amount: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"showFeedback\", {\n      type: feedbackTypes[2],\n      amount: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TotalFeedback, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"TotalFeedback\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/Richard/FullstackDevelopment2022/Part1/unicafe/src/App.js"],"names":["useState","Header","header","Button","clickFunc","description","showFeedback","type","amount","total","TotalFeedback","good","neutral","bad","App","setGood","setNeutral","setBad","title","statTitle","feedbackTypes","incGood","incNeutral","incBad"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst Header = ({header}) => {\n  return (\n    <div>\n      <h1>{header}</h1>\n    </div>\n  )\n}\n\nconst Button = ({ clickFunc, description }) => (  //similar to as shown in the tutorial about rendering in part 1\n  <button onClick={clickFunc}>\n    {description}\n    </button>\n)\n\nconst showFeedback = ({type, amount}) => {\n  return (\n    <div>\n      <p>{type}: {total}</p>\n    </div>\n  )\n}\n\nconst TotalFeedback = ({good, neutral, bad}) => {\n  return (\n    <div>\n      <p>All feedback: {good+neutral+bad}</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const title = 'Please give unicafe feedback'\n  const statTitle = 'statistics'\n  const feedbackTypes = ['Good', 'Neutral', 'Bad']\n\n  const incGood = () => setGood(good+1)\n  const incNeutral = () => setNeutral(neutral+1)\n  const incBad = () => setBad(bad+1)\n\n  return (\n    <div>\n      <Header header={title}/>\n      <Button clickFunc={incGood} description={\"Good\"}/>\n      <Button clickFunc={incNeutral} description={\"Neutral\"}/>\n      <Button clickFunc={incBad} description={\"Bad\"}/>\n      <Header header={statTitle}/>\n      <showFeedback type={feedbackTypes[0]} amount={good}/>\n      <showFeedback type={feedbackTypes[1]} amount={neutral}/>\n      <showFeedback type={feedbackTypes[2]} amount={bad}/>\n      <TotalFeedback good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}