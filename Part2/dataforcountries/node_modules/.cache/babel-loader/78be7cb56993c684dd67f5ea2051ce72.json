{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\FullstackDevelopment2022\\\\Part2\\\\dataforcountries\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PersonsDisplay from './components/PersonsDisplay';\nimport NameFilter from './components/NameFilter';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilter, setNewFilter] = useState('');\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const showCountries = () => {\n    if (newFilter === '') {\n      return countries;\n    } else {\n      return countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()));\n    }\n  };\n\n  useEffect(() => {\n    //as shown in part 2, effect hooks, it fetches persons data for the initial state as asked in 2.11\n    axios.get('http://localhost:3001/persons').then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NameFilter, {\n      inputNameValue: newFilter,\n      inputNameChangeFunc: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonsDisplay, {\n      persons: showCountries()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sbjSt76Z7vu5qgjkyLJrqXFqjhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Richard/FullstackDevelopment2022/Part2/dataforcountries/src/App.js"],"names":["useState","useEffect","PersonsDisplay","NameFilter","axios","App","countries","setCountries","newFilter","setNewFilter","handleFilterChange","event","target","value","showCountries","filter","country","name","toLowerCase","includes","get","then","response","setPersons","data"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,kBAAkB,GAAIC,KAAD,IAAW;AACpCF,IAAAA,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIN,SAAS,KAAK,EAAlB,EAAsB;AACpB,aAAOF,SAAP;AACD,KAFD,MAGK;AACH,aAAOA,SAAS,CAACS,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCX,SAAS,CAACU,WAAV,EAApC,CAA5B,CAAP;AACD;AACF,GAPD;;AASAjB,EAAAA,SAAS,CAAC,MAAM;AAAE;AAChBG,IAAAA,KAAK,CAACgB,GAAN,CAAU,+BAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,UAAU,CAACD,QAAQ,CAACE,IAAV,CAAV;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,cAAc,EAAEhB,SAA5B;AAAuC,MAAA,mBAAmB,EAAEE;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEI,aAAa;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BD;;GAAMT,G;;KAAAA,G;AAgCN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport PersonsDisplay from './components/PersonsDisplay'\nimport NameFilter from './components/NameFilter'\nimport axios from 'axios'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [newFilter, setNewFilter] = useState('')\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const showCountries = () => {\n    if (newFilter === '') {\n      return countries\n    }\n    else {\n      return countries.filter(country => country.name.toLowerCase().includes(newFilter.toLowerCase()))\n    }\n  }\n\n  useEffect(() => { //as shown in part 2, effect hooks, it fetches persons data for the initial state as asked in 2.11\n    axios.get('http://localhost:3001/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n      <NameFilter inputNameValue={newFilter} inputNameChangeFunc={handleFilterChange} />\n      <PersonsDisplay persons={showCountries()} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}