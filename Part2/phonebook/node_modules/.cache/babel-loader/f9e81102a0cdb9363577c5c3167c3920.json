{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richard\\\\FullstackDevelopment2022\\\\Part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport PersonsDisplay from './components/PersonsDisplay';\nimport Header from './components/Header';\nimport PhoneForm from './components/PhoneForm';\nimport NameFilter from './components/NameFilter';\nimport Phonebook from './services/Phonebook';\nimport SuccessMessage from './components/SuccessMessage';\nimport FailureMessage from './components/FailureMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [successMsg, setSuccessMsg] = useState(null);\n  const [failureMsg, setFailureMsg] = useState(null);\n  const phonebookTitle = \"Phonebook\";\n  const numbersTitle = \"Numbers\";\n  const formTitle = \"Add a new person\";\n\n  const addPerson = event => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the phonebook, would you like to replace the old number with the new one?`)) {\n        const oldPerson = persons.filter(person => person.name === newName); //find() was probably easier in hindsight\n\n        Phonebook.updatePerson(oldPerson[0].id, newPerson).then(updatedPerson => {\n          setPersons(persons.map(person => person.id !== oldPerson[0].id ? person : updatedPerson));\n          setNewName('');\n          setNewNumber('');\n          setSuccessMsg(`Successfully updated ${updatedPerson.name}`);\n          setTimeout(() => {\n            setSuccessMsg(null);\n          }, 5000);\n        }).catch(error => {\n          setFailureMsg(`The person does no no longer exist`);\n          setTimeout(() => {\n            setFailureMsg(null);\n          }, 5000);\n          setPersons(persons.filter(person => person.name !== newPerson.name));\n          setNewName('');\n          setNewNumber('');\n        });\n      }\n\n      return;\n    }\n\n    Phonebook.createPerson(newPerson).then(createdPerson => {\n      setPersons(persons.concat(createdPerson));\n      setNewName('');\n      setNewNumber('');\n      setSuccessMsg(`Successfully added ${createdPerson.name}`);\n      setTimeout(() => {\n        setSuccessMsg(null);\n      }, 5000);\n    }).catch(error => {\n      setFailureMsg(`The person does no no longer exist`);\n      setTimeout(() => {\n        setFailureMsg(null);\n      }, 5000);\n      setPersons(persons.filter(person => person.name !== newPerson.name));\n      setNewName('');\n      setNewNumber('');\n    });\n  };\n\n  const deletePerson = name => {\n    const deleteThisPerson = persons.find(person => person.name === name);\n\n    if (window.confirm(`Are you sure you want to delete ${deleteThisPerson.name}? `)) {\n      Phonebook.deletePerson(deleteThisPerson.id).then(() => {\n        setPersons(persons.filter(person => person.name !== name));\n        setSuccessMsg(`Successfully deleted ${name}`);\n        setTimeout(() => {\n          setSuccessMsg(null);\n        }, 5000);\n      }).catch(error => {\n        setFailureMsg(`The person does no no longer exist`);\n        setTimeout(() => {\n          setFailureMsg(null);\n        }, 5000);\n        setPersons(persons.filter(person => person.name !== name));\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const showPersons = () => {\n    if (newFilter === '') {\n      return persons;\n    } else {\n      return persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n    }\n  };\n\n  useEffect(() => {\n    Phonebook.getAllPersons().then(allPersons => {\n      setPersons(allPersons);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: phonebookTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      message: successMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FailureMessage, {\n      message: failureMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameFilter, {\n      inputNameValue: newFilter,\n      inputNameChangeFunc: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      header: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhoneForm, {\n      submitFunc: addPerson,\n      inputNameValue: newName,\n      inputNameChangeFunc: handleNameChange,\n      inputPhoneValue: newNumber,\n      inputPhoneChangeFunc: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      header: numbersTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonsDisplay, {\n      persons: showPersons(),\n      deleteFunc: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"x9Ah1hJYl+bRG+UMXTFGi1+4Pm0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Richard/FullstackDevelopment2022/Part2/phonebook/src/App.js"],"names":["useState","useEffect","PersonsDisplay","Header","PhoneForm","NameFilter","Phonebook","SuccessMessage","FailureMessage","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMsg","setSuccessMsg","failureMsg","setFailureMsg","phonebookTitle","numbersTitle","formTitle","addPerson","event","preventDefault","newPerson","name","number","some","person","window","confirm","oldPerson","filter","updatePerson","id","then","updatedPerson","map","setTimeout","catch","error","createPerson","createdPerson","concat","deletePerson","deleteThisPerson","find","handleNameChange","target","value","handleNumberChange","handleFilterChange","showPersons","toLowerCase","includes","getAllPersons","allPersons"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA+BnB,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA+BrB,QAAQ,CAAC,IAAD,CAA7C;AAEA,QAAMsB,cAAc,GAAG,WAAvB;AACA,QAAMC,YAAY,GAAG,SAArB;AACA,QAAMC,SAAS,GAAG,kBAAlB;;AAEA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAEjB,OADU;AAEhBkB,MAAAA,MAAM,EAAEhB;AAFQ,KAAlB;;AAIA,QAAGJ,OAAO,CAACqB,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBjB,OAAvC,CAAH,EAAmD;AACjD,UAAGqB,MAAM,CAACC,OAAP,CAAgB,GAAEtB,OAAQ,gGAA1B,CAAH,EAA+H;AAC7H,cAAMuB,SAAS,GAAGzB,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBjB,OAAzC,CAAlB,CAD6H,CACzD;;AACpEN,QAAAA,SAAS,CAAC+B,YAAV,CAAuBF,SAAS,CAAC,CAAD,CAAT,CAAaG,EAApC,EAAwCV,SAAxC,EACGW,IADH,CACQC,aAAa,IAAI;AACrB7B,UAAAA,UAAU,CAACD,OAAO,CAAC+B,GAAR,CAAYT,MAAM,IAAIA,MAAM,CAACM,EAAP,KAAcH,SAAS,CAAC,CAAD,CAAT,CAAaG,EAA3B,GAAgCN,MAAhC,GAAyCQ,aAA/D,CAAD,CAAV;AACA3B,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,UAAAA,aAAa,CAAE,wBAAuBqB,aAAa,CAACX,IAAK,EAA5C,CAAb;AACAa,UAAAA,UAAU,CAAC,MAAM;AACfvB,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,SATH,EAUCwB,KAVD,CAUOC,KAAK,IAAI;AACdvB,UAAAA,aAAa,CAAE,oCAAF,CAAb;AACAqB,UAAAA,UAAU,CAAC,MAAM;AACfrB,YAAAA,aAAa,CAAC,IAAD,CAAb;AACD,WAFS,EAEP,IAFO,CAAV;AAGAV,UAAAA,UAAU,CAACD,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBD,SAAS,CAACC,IAAnD,CAAD,CAAV;AACAhB,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,SAlBD;AAmBD;;AACD;AACD;;AACDT,IAAAA,SAAS,CAACuC,YAAV,CAAuBjB,SAAvB,EACGW,IADH,CACQO,aAAa,IAAI;AACrBnC,MAAAA,UAAU,CAACD,OAAO,CAACqC,MAAR,CAAeD,aAAf,CAAD,CAAV;AACAjC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,MAAAA,aAAa,CAAE,sBAAqB2B,aAAa,CAACjB,IAAK,EAA1C,CAAb;AACAa,MAAAA,UAAU,CAAC,MAAM;AACfvB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KATH,EAUCwB,KAVD,CAUOC,KAAK,IAAI;AACdvB,MAAAA,aAAa,CAAE,oCAAF,CAAb;AACAqB,MAAAA,UAAU,CAAC,MAAM;AACfrB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAFS,EAEP,IAFO,CAAV;AAGAV,MAAAA,UAAU,CAACD,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBD,SAAS,CAACC,IAAnD,CAAD,CAAV;AACAhB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAlBD;AAmBD,GAlDD;;AAoDA,QAAMiC,YAAY,GAAGnB,IAAI,IAAI;AAC3B,UAAMoB,gBAAgB,GAAGvC,OAAO,CAACwC,IAAR,CAAalB,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBA,IAAvC,CAAzB;;AACA,QAAGI,MAAM,CAACC,OAAP,CAAgB,mCAAkCe,gBAAgB,CAACpB,IAAK,IAAxE,CAAH,EAAiF;AAC/EvB,MAAAA,SAAS,CAAC0C,YAAV,CAAuBC,gBAAgB,CAACX,EAAxC,EACGC,IADH,CACQ,MAAK;AACT5B,QAAAA,UAAU,CAACD,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBA,IAAzC,CAAD,CAAV;AACAV,QAAAA,aAAa,CAAE,wBAAuBU,IAAK,EAA9B,CAAb;AACAa,QAAAA,UAAU,CAAC,MAAM;AACfvB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OAPH,EAQCwB,KARD,CAQOC,KAAK,IAAI;AACdvB,QAAAA,aAAa,CAAE,oCAAF,CAAb;AACAqB,QAAAA,UAAU,CAAC,MAAM;AACfrB,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD,SAFS,EAEP,IAFO,CAAV;AAGAV,QAAAA,UAAU,CAACD,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,KAAgBA,IAAzC,CAAD,CAAV;AACD,OAdD;AAeD;AACF,GAnBD;;AAqBA,QAAMsB,gBAAgB,GAAIzB,KAAD,IAAW;AAClCb,IAAAA,UAAU,CAACa,KAAK,CAAC0B,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAI5B,KAAD,IAAW;AACpCX,IAAAA,YAAY,CAACW,KAAK,CAAC0B,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAI7B,KAAD,IAAW;AACpCT,IAAAA,YAAY,CAACS,KAAK,CAAC0B,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAGxC,SAAS,KAAG,EAAf,EAAmB;AACjB,aAAON,OAAP;AACD,KAFD,MAGK;AACH,aAAOA,OAAO,CAAC0B,MAAR,CAAeJ,MAAM,IAAIA,MAAM,CAACH,IAAP,CAAY4B,WAAZ,GAA0BC,QAA1B,CAAmC1C,SAAS,CAACyC,WAAV,EAAnC,CAAzB,CAAP;AACD;AACF,GAPD;;AASAxD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACqD,aAAV,GACGpB,IADH,CACQqB,UAAU,IAAI;AAClBjD,MAAAA,UAAU,CAACiD,UAAD,CAAV;AACD,KAHH;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEtC;AAAhB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEJ;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,cAAc,EAAEJ,SAA5B;AAAuC,MAAA,mBAAmB,EAAEuC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE/B;AAAhB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEC,SAAvB;AAAkC,MAAA,cAAc,EAAEb,OAAlD;AAA2D,MAAA,mBAAmB,EAAEuC,gBAAhF;AAAkG,MAAA,eAAe,EAAErC,SAAnH;AAA8H,MAAA,oBAAoB,EAAEwC;AAApJ;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE/B;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEiC,WAAW,EAApC;AAAwC,MAAA,UAAU,EAAER;AAApD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA7HD;;GAAMvC,G;;KAAAA,G;AA+HN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport PersonsDisplay from './components/PersonsDisplay'\nimport Header from './components/Header'\nimport PhoneForm from './components/PhoneForm'\nimport NameFilter from './components/NameFilter'\nimport Phonebook from './services/Phonebook'\nimport SuccessMessage from './components/SuccessMessage'\nimport FailureMessage from './components/FailureMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [successMsg, setSuccessMsg ] = useState(null)\n  const [failureMsg, setFailureMsg ] = useState(null)\n\n  const phonebookTitle = \"Phonebook\"\n  const numbersTitle = \"Numbers\"\n  const formTitle = \"Add a new person\"\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.some(person => person.name === newName)){\n      if(window.confirm(`${newName} is already added to the phonebook, would you like to replace the old number with the new one?`)) {\n        const oldPerson = persons.filter(person => person.name === newName) //find() was probably easier in hindsight\n        Phonebook.updatePerson(oldPerson[0].id, newPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== oldPerson[0].id ? person : updatedPerson))\n            setNewName('')\n            setNewNumber('')\n            setSuccessMsg(`Successfully updated ${updatedPerson.name}`)\n            setTimeout(() => {\n              setSuccessMsg(null)\n            }, 5000)\n          })\n        .catch(error => { \n          setFailureMsg(`The person does no no longer exist`)\n          setTimeout(() => {\n            setFailureMsg(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.name !== newPerson.name))\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n      return\n    }\n    Phonebook.createPerson(newPerson)\n      .then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        setNewName('')\n        setNewNumber('')\n        setSuccessMsg(`Successfully added ${createdPerson.name}`)\n        setTimeout(() => {\n          setSuccessMsg(null)\n        }, 5000)\n      })\n    .catch(error => { \n      setFailureMsg(`The person does no no longer exist`)\n      setTimeout(() => {\n        setFailureMsg(null)\n      }, 5000)\n      setPersons(persons.filter(person => person.name !== newPerson.name))\n      setNewName('')\n      setNewNumber('')\n    })\n  }\n\n  const deletePerson = name => {\n    const deleteThisPerson = persons.find(person => person.name === name)\n    if(window.confirm(`Are you sure you want to delete ${deleteThisPerson.name}? `)) {\n      Phonebook.deletePerson(deleteThisPerson.id)\n        .then(()=> {\n          setPersons(persons.filter(person => person.name !== name))\n          setSuccessMsg(`Successfully deleted ${name}`)\n          setTimeout(() => {\n            setSuccessMsg(null)\n          }, 5000)\n        })\n      .catch(error => { \n        setFailureMsg(`The person does no no longer exist`)\n        setTimeout(() => {\n          setFailureMsg(null)\n        }, 5000)\n        setPersons(persons.filter(person => person.name !== name))\n      })\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const showPersons = () => {\n    if(newFilter==='') {\n      return persons\n    }\n    else {\n      return persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n    }\n  }\n  \n  useEffect(() => { \n    Phonebook.getAllPersons()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n  }, [])\n\n  return (\n    <div>\n      <Header header={phonebookTitle}/>\n      <SuccessMessage message={successMsg}/>\n      <FailureMessage message={failureMsg}/>\n      <NameFilter inputNameValue={newFilter} inputNameChangeFunc={handleFilterChange}/>\n      <Header header={formTitle}/>\n      <PhoneForm submitFunc={addPerson} inputNameValue={newName} inputNameChangeFunc={handleNameChange} inputPhoneValue={newNumber} inputPhoneChangeFunc={handleNumberChange}/>\n      <Header header={numbersTitle}/>\n      <PersonsDisplay persons={showPersons()} deleteFunc={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}